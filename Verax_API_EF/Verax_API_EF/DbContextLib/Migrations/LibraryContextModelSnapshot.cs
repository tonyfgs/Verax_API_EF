// <auto-generated />
using DbContextLib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbContextLib.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("Entities.ArticleEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DatePublished")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LectureTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ArticleSet");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Author = "Tom Smith",
                            DatePublished = "2022-02-06",
                            Description = "The queen of England died today at the age of 95",
                            LectureTime = 2,
                            Title = "Breaking News Elisabeth 2 Died"
                        },
                        new
                        {
                            Id = 2L,
                            Author = "Tom Smith",
                            DatePublished = "2022-02-06",
                            Description = "The new iPhone 15 is out and it's the best phone ever",
                            LectureTime = 3,
                            Title = "The new iPhone 15"
                        },
                        new
                        {
                            Id = 3L,
                            Author = "M&M's Red",
                            DatePublished = "2022-02-06",
                            Description = "M&M's new recipe is out and it's the best chocolate ever",
                            LectureTime = 1,
                            Title = "M&M's new recipe"
                        });
                });

            modelBuilder.Entity("Entities.ArticleUserEntity", b =>
                {
                    b.Property<long>("ArticleEntityId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserEntityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ArticleEntityId", "UserEntityId");

                    b.HasIndex("UserEntityId");

                    b.ToTable("ArticleUserSet");

                    b.HasData(
                        new
                        {
                            ArticleEntityId = 1L,
                            UserEntityId = 1L
                        },
                        new
                        {
                            ArticleEntityId = 2L,
                            UserEntityId = 2L
                        },
                        new
                        {
                            ArticleEntityId = 3L,
                            UserEntityId = 3L
                        },
                        new
                        {
                            ArticleEntityId = 3L,
                            UserEntityId = 1L
                        },
                        new
                        {
                            ArticleEntityId = 2L,
                            UserEntityId = 3L
                        });
                });

            modelBuilder.Entity("Entities.FormEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DatePublication")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pseudo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("UserEntityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserEntityId");

                    b.ToTable("FormSet");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DatePublication = "Form 1 Description",
                            Link = "hhtp://form1.com",
                            Pseudo = "Form 1",
                            Theme = "",
                            UserEntityId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            DatePublication = "Form 2 Description",
                            Link = "hhtp://form2.com",
                            Pseudo = "Form 2",
                            Theme = "",
                            UserEntityId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            DatePublication = "Form 3 Description",
                            Link = "hhtp://form3.com",
                            Pseudo = "Form 3",
                            Theme = "",
                            UserEntityId = 3L
                        });
                });

            modelBuilder.Entity("Entities.UserEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Mdp")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pseudo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UserSet");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Mail = "tony@gmail.com",
                            Mdp = "1234",
                            Nom = "Fages",
                            Prenom = "Tony",
                            Pseudo = "TonyF",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 2L,
                            Mail = "tom@mail.com",
                            Mdp = "1234",
                            Nom = "Smith",
                            Prenom = "Tom",
                            Pseudo = "TomS",
                            Role = "User"
                        },
                        new
                        {
                            Id = 3L,
                            Mail = "M&M#mail.com",
                            Mdp = "1234",
                            Nom = "M&M's",
                            Prenom = "Red",
                            Pseudo = "RedM",
                            Role = "Modérator"
                        },
                        new
                        {
                            Id = 4L,
                            Mail = "ShaCasca@gmail.com",
                            Mdp = "1234",
                            Nom = "Cascarra",
                            Prenom = "Cascarra",
                            Pseudo = "Sha",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 5L,
                            Mail = "",
                            Mdp = "1234",
                            Nom = "Sillard",
                            Prenom = "Noa",
                            Pseudo = "NoaSil",
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("Entities.ArticleUserEntity", b =>
                {
                    b.HasOne("Entities.ArticleEntity", null)
                        .WithMany()
                        .HasForeignKey("ArticleEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.FormEntity", b =>
                {
                    b.HasOne("Entities.UserEntity", "User")
                        .WithMany("Forms")
                        .HasForeignKey("UserEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.UserEntity", b =>
                {
                    b.Navigation("Forms");
                });
#pragma warning restore 612, 618
        }
    }
}
